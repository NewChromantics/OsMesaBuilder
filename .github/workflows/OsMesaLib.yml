name: Build OSMesa Lib

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    container:
      image: ghcr.io/newchromantics/osmesa-env

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Run Meson
        working-directory: mesa
        run: |
          ls
          /usr/local/bin/meson builddir \
          -Dplatforms=drm \
          -Dosmesa=gallium \
          -Dgallium-drivers=swrast \
          -Ddri-drivers=[] \
          -Dvulkan-drivers=[] \
          -Dglx=disabled

      - name: Run Ninja
        working-directory: mesa
        run: ninja -C builddir install

      - name: Zip Libs
        run: zip -r -9 osmesa.zip /usr/local/lib/x86_64-linux-gnu

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./osmesa.zip
          asset_name: osmesa.zip
          asset_content_type: application/zip
